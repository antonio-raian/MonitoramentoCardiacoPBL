/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.SMC.view;

import br.com.SMC.conection.ConectionMedico;
import java.io.IOException;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Antonio Raian
 */
//Tela do medico apos logado, mostra informações dos pacientes em risco
public class TelaInicial extends javax.swing.JDialog {

    /**
     * Creates new form TelaInicial
     */
    public TelaInicial(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    private String endereco;//Endereço do host de conexão
    private int porta;//porta de conexão
    private Inicio parent;
    TelaInicial(Inicio aThis, boolean b, String endereco, int porta) throws IOException, ClassNotFoundException {
        super(aThis, b);
        this.endereco = endereco;
        this.porta = porta;
        this.parent = aThis;
        initComponents();        
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaPaciente = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnLogout = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNick = new javax.swing.JTextField();
        btnDetalhes = new javax.swing.JButton();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pacientes Críticos");
        setLocation(new java.awt.Point(100, 50));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Início");

        jPanel2.setLayout(new java.awt.GridLayout(1, 1));

        tabelaPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nome", "Nick"
            }
        ));
        tabelaPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tabelaPaciente.setEnabled(false);
        tabelaPaciente.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaPacienteMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaPaciente);

        jPanel2.add(jScrollPane2);

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnLogout, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Pacientes em Risco");

        jLabel2.setText("Nick Paciente:");

        btnDetalhes.setText("Detalhes");
        btnDetalhes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetalhesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNick, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDetalhes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtNick, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnDetalhes)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //action do botão de detalhamento de paciente
    private void btnDetalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetalhesActionPerformed
        try {
            //Cria-se uma instancia para tela de detalhes passando o nick
            DetalhePaciente dtPaciente = new DetalhePaciente(parent, true, endereco, porta, txtNick.getText());
            dtPaciente.setVisible(true);//torna-a visivel
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Não conseguiu conectar ao servidor!");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro de comunicação");
        }
        
    }//GEN-LAST:event_btnDetalhesActionPerformed
    
    //action do botão de cancelar
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        setVisible(false);//Fecha a tela e desconecta
        timer.cancel();
        dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void tabelaPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaPacienteMouseClicked
        int linha = tabelaPaciente.getSelectedRow();
        if(linha>=0){
            try {
                //Cria-se uma instancia para tela de detalhes passando o nick
                DetalhePaciente dtPaciente = new DetalhePaciente(parent, true, endereco, porta, (String)tabelaPaciente.getValueAt(linha, 1));
                dtPaciente.setVisible(true);//torna-a visivel
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Não conseguiu conectar ao servidor!");
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Erro de comunicação");
            }
        }
    }//GEN-LAST:event_tabelaPacienteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaInicial dialog = new TelaInicial(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetalhes;
    private javax.swing.JButton btnLogout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabelaPaciente;
    private javax.swing.JTextField txtNick;
    // End of variables declaration//GEN-END:variables
    private ConectionMedico conect;//responsável pela conexão
    private DefaultTableModel pacientes;//Responsável pela lista usada no jTable
    private int delay = 0;   // delay de 0 seg.
    private int intervalo = 5000;  // intervalo de 5 seg.
    Timer timer = new Timer();//Usado para envio de dados automaticamente
    
    //metodo que inicia a variavel de conexão
    private void conecta() throws IOException {
        conect = new ConectionMedico(endereco, porta);//Cria-se uma instancia para a classe de conexão
        conect.conectar();//Usa o metodo de conexão
    }
    
    //Metodo que inicia os valores da tela
    private void init() throws IOException, ClassNotFoundException {
        //carregaDados();
        timer.scheduleAtFixedRate(new TimerTask() {
            public void run() {
                try {
                    carregaDados();//Metodo que carrega os dados dos pacientes em risco na jList
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Não conseguiu conectar ao servidor!");
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Erro de comunicação");
                }
            }
        }, delay, intervalo);
    }
    
    //Metodo usado para recuperar os dados dos pacientes em risco e coloca-los na tela
    private void carregaDados() throws IOException, ClassNotFoundException{
        conecta();//conecta-se ao servior
        String str = conect.listaPrioritarios();//solicita a lista de prioritarios e quanda numa String
        pacientes = new DefaultTableModel();
        pacientes.addColumn("Nome");
        pacientes.addColumn("Nick");
        if(!str.equals("$VAZIO$")){//Se não estiver vazia a resposta do servidor
            String[] aux = str.split("#");//Separa as informações pelo "#'
            for(String s:aux){//Percorre todas as informações do servidor
                String[] x = s.split("-");
                pacientes.addRow(new Object[]{x[1],x[0]});//E armazena no objeto do TABELA
            }
            tabelaPaciente.setModel(pacientes);
            tabelaPaciente.setVisible(true);
            tabelaPaciente.setEnabled(true);
            tabelaPaciente.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
            tabelaPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        }
    }
}
